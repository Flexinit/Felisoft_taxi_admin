package com.example.drupp_driver.connectivity.http;import com.example.drupp_driver.Models.BankDetailsModel;import com.example.drupp_driver.Models.BusInfoModel;import com.example.drupp_driver.Models.ChatUserMessage;import com.example.drupp_driver.Models.DashboardCountModel;import com.example.drupp_driver.Models.DashboardModel;import com.example.drupp_driver.Models.DriverProfileModel;import com.example.drupp_driver.Models.EditRideDetails;import com.example.drupp_driver.Models.FinishFares;import com.example.drupp_driver.Models.LoginResponse;import com.example.drupp_driver.Models.MyResponse;import com.example.drupp_driver.Models.NotificationModel;import com.example.drupp_driver.Models.PassengerInfoModel;import com.example.drupp_driver.Models.PostRideDetails;import com.example.drupp_driver.Models.RatingModel;import com.example.drupp_driver.Models.RideCancelDetails;import com.example.drupp_driver.Models.RideInfo;import com.example.drupp_driver.Models.RideInfoModel;import com.example.drupp_driver.Models.ScheduleRideDriverResponse;import com.example.drupp_driver.Models.ScheduledRideUserReponse;import com.example.drupp_driver.Models.SingleNotification;import com.example.drupp_driver.Models.SingleRideModel;import com.example.drupp_driver.Models.Token;import com.example.drupp_driver.Models.Trip;import com.example.drupp_driver.Models.UserRatingModel;import com.example.drupp_driver.Models.WalletTransaction;import com.example.drupp_driver.helpers.AppConstants;import java.util.HashMap;import java.util.List;import okhttp3.RequestBody;import retrofit2.Call;import retrofit2.http.Body;import retrofit2.http.GET;import retrofit2.http.Header;import retrofit2.http.POST;import retrofit2.http.Query;import retrofit2.http.QueryMap;//import com.quawlebs.drupp.Util.Token;public interface QAPIServices {    @POST(AppConstants.U_SIGN_UP)    Call<QualStandardResponse<HashMap<String, String>>> userSignin(@Body HashMap<String, String> driverregistration);    @POST(AppConstants.U_NUMBER_VERIFICATION)    Call<QualStandardResponse<LoginResponse>> numberVerification(@Body HashMap<String, String> parse);    @POST(AppConstants.U_DRIVER_SUPPORT)    Call<QualStandardResponseList<Token>> driverSupport(@Header("Authorization") String auth, @Body HashMap<String, String> parse);    @GET(AppConstants.U_GET_RIDE_HISTORY)    Call<QualStandardResponseList<Trip>> getTrips();    @GET(AppConstants.DRIVER_SCHEDULED_RIDES)    Call<QualStandardResponseList<ScheduleRideDriverResponse>> getScheduledRidesDriver();    @GET(AppConstants.USER_SCHEDULED_RIDES)    Call<QualStandardResponseList<ScheduledRideUserReponse>> getScheduledRidesUser();    @GET(AppConstants.U_GET_COMPLETED_RIDES)    Call<QualStandardResponseList<Trip>> getCompletedRides();    @GET(AppConstants.U_GET_CANCELED_RIDES)    Call<QualStandardResponseList<Trip>> getCanceledRides();    @GET(AppConstants.DRIVER_TRIP_SINGLE_RIDES)    Call<QualStandardResponse<SingleRideModel>> getTripHistorySingle(@Query("ride_id") int rideId);    @GET(AppConstants.GET_USER_RATING)    Call<QualStandardResponse<UserRatingModel>> getUserRating(@Header("Authorization") String auth, @Query("ride_id") int ride_id);    @GET(AppConstants.GET_RECENT_RIDE)    Call<QualStandardResponse<Trip>> getRecentRide();    @POST(AppConstants.U_ACCEPT_RIDE)    Call<QualStandardResponseList<Token>> driverAcceptRide(@Body HashMap<String, Integer> parse);    @POST(AppConstants.RATE_USER)    Call<QualStandardResponseList<Token>> rateUser(@Header("Authorization") String auth, @Body RatingModel ratingModel);    @POST(AppConstants.U_ACCEPT_RIDE_POST)    Call<QualStandardResponseList<Token>> driverAcceptRidePost(@Body HashMap<String, Integer> parse);    @POST(AppConstants.U_START_RIDE)    Call<QualStandardResponseList<Token>> driverStartRide(@Body HashMap<String, Integer> parse);    @POST(AppConstants.U_FINISH_RIDE)    Call<QualStandardResponse<FinishFares>> driverFinishRide(@Body HashMap<String, Integer> parse);    @POST(AppConstants.U_CANCEL_RIDE)    Call<QualStandardResponseList<Token>> driverCancelRide(@Body RideCancelDetails rideCancelDetails);    @POST(AppConstants.U_POST_RIDE)    Call<QualStandardResponse<HashMap<String, String>>> postRide(@Body PostRideDetails postRideDetails);    @POST(AppConstants.DRIVER_SCHEDULED_RIDES_EDIT)    Call<QualStandardResponseList<Token>> editRide(@Header("Authorization") String auth, @Body EditRideDetails editRideDetails);    @POST(AppConstants.DRIVER_LIVE_LOCATION)    Call<QualStandardResponseList<Token>> driverLiveLocstion(@Body HashMap<String, Double> parse);    @POST(AppConstants.U_PROFILE_IMAGE_UPLOAD)    Call<QualStandardResponse<MyResponse>> updateUserProfile(@Body RequestBody requestBody);    @GET(AppConstants.U_GET_DRIVER_DASHBOARD)    Call<QualStandardResponse<DashboardModel>> getDashboard();    @GET(AppConstants.GET_DRIVER_DASHBOARD_COUNT)    Call<QualStandardResponse<DashboardCountModel>> getDashboardCount(@Query(AppConstants.K_TYPE) String type);    @POST(AppConstants.U_UPLOAD_LICENSE)    Call<QualStandardResponse<MyResponse>> updateLicenseImage(@Body RequestBody requestBody);    @GET(AppConstants.U_UNIQUE_EMAIL_CHECK)    Call<QualStandardResponseList<String>> validateEmail(@Query(AppConstants.K_EMAIL) String email);    @GET(AppConstants.U_GET_RIDE_INFO)    Call<QualStandardResponse<RideInfoModel>> getRideInfo(@Query(AppConstants.K_POSTED_BY_DRIVER) int isDriverPosted, @Query(AppConstants.K_RIDE_ID) int rideId);    @POST(AppConstants.U_UPLOAD_VEHICLE_IMAGE)    Call<QualStandardResponse<MyResponse>> uploadVehicleImage(@Body RequestBody requestBody);    @POST(AppConstants.U_LOG_OUT)    Call<QualStandardResponseList<Token>> logOut(@Body HashMap<String, String> param);    @POST(AppConstants.U_DRIVER_AVAILABILITY_ACTION)    Call<QualStandardResponseList<Token>> driverStatus(@Body HashMap<String, Integer> parse);    @GET(AppConstants.U_GET_RIDE_DETAILS)    Call<QualStandardResponse<RideInfo>> getRideDetails(@QueryMap HashMap<String, String> parse);    @POST(AppConstants.U_SEND_MESSAGE)    Call<QualStandardResponse<ChatUserMessage>> sendMessage(@Body ChatUserMessage chatUserMessage);    @GET(AppConstants.U_GET_SINGLE_SCHEDULED_DRIVER_RIDE)    Call<QualStandardResponse<SingleRideModel>> getSingleScheduledDriverRide(@Query(AppConstants.K_RIDE_ID) int rideId);    @GET(AppConstants.U_GET_SINGLE_SCHEDULED_USER_RIDE)    Call<QualStandardResponse<SingleRideModel>> getSingleScheduledUserRide(@Query(AppConstants.K_RIDE_ID) int rideId);    @GET(AppConstants.U_GET_SINGLE_NOTIFICATION)    Call<QualStandardResponse<SingleNotification>> getSingleNotification(@Query(AppConstants.K_ID) int id);    @GET(AppConstants.U_GET_ALL_NOTIFICATIONS)    Call<QualStandardResponseList<NotificationModel>> getAllNotifications();    @GET(AppConstants.U_GET_WALLET_BALANCE)    Call<QualStandardResponse<HashMap<String, String>>> getWalletBalance();    @GET(AppConstants.U_GET_BUS_SCHEDULE)    Call<QualStandardResponseList<BusInfoModel>> getBusSchedule();    @GET(AppConstants.U_GET_BANKS_LIST)    Call<QualStandardResponseList<BankDetailsModel>> getBanksList();    @GET(AppConstants.U_GET_RECEIVED_TRANSACTION)    Call<QualStandardResponseList<WalletTransaction>> getWalletTransaction();    @GET(AppConstants.U_GET_DRIVER_PROFILE)    Call<QualStandardResponse<DriverProfileModel>> getDriverProfile();    @POST(AppConstants.U_VERIFY_RIDE_OTP)    Call<QualStandardResponseList<String>> codeVerification(@Body HashMap<String, String> parse);    @POST(AppConstants.U_ON_BOARD_ACTION)    Call<QualStandardResponseList<String>> passengerBoardAction(@Body HashMap<String, List<PassengerInfoModel>> param);    @POST(AppConstants.U_START_BUS_RIDE)    Call<QualStandardResponseList<String>> startBusRide(@Body HashMap<String, String> param);    @POST(AppConstants.U_FINISH_BUS_RIDE)    Call<QualStandardResponseList<String>> finishBusRide(@Body HashMap<String, String> param);    @GET(AppConstants.U_GET_TERM_AND_CONDITION)    Call<QualStandardResponse<HashMap<String, String>>> getTermsAndCondition();    @POST(AppConstants.U_CHANGE_PASSWORD)    Call<QualStandardResponseList<String>> changePassword(@Body HashMap<String, String> param);    @POST(AppConstants.U_EDIT_PROFILE)    Call<QualStandardResponseList<String>> editDriverProfile(@Body HashMap<String, String> params);    @POST(AppConstants.U_VERIFY_OTP)    Call<QualStandardResponseList<String>> verifyOtp(@Body HashMap<String, Object> params);    @POST(AppConstants.U_DRIVER_ARRIVED_ACTION)    Call<QualStandardResponseList<String>> driverArrivedAction(@Body HashMap<String, Object> params);}